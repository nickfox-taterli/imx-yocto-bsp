From d688d6abe1b0d495d0c771040680f0729e9e1614 Mon Sep 17 00:00:00 2001
From: Julien Vuillaumier <julien.vuillaumier@nxp.com>
Date: Wed, 3 Nov 2021 14:46:09 +0100
Subject: [PATCH] [Build] Add g_memdup2() support for glib >= 2.68

Update to fix build with glib version 2.68 and later

Legacy function:
  gpointer g_memdup ( gconstpointer mem, guint byte_size )
is deprecated since version 2.68 and replaced by:
  gpointer g_memdup2 ( gconstpointer mem, gsize byte_size )

Difference is byte_size argument type changed from guint to gsize.

Upstream-Status: Pending

Signed-off-by: Julien Vuillaumier <julien.vuillaumier@nxp.com>
---
 ext/nnstreamer/extra/nnstreamer_grpc_flatbuf.cc          | 4 ++++
 ext/nnstreamer/extra/nnstreamer_grpc_protobuf.cc         | 4 ++++
 ext/nnstreamer/extra/nnstreamer_protobuf.cc              | 6 +++++-
 .../tensor_converter/tensor_converter_python3.cc         | 7 ++++++-
 meson.build                                              | 7 ++++++-
 tests/gstreamer_join/unittest_join.cc                    | 8 ++++++++
 tests/nnstreamer_converter/unittest_converter.cc         | 9 +++++++++
 7 files changed, 42 insertions(+), 3 deletions(-)

diff --git a/ext/nnstreamer/extra/nnstreamer_grpc_flatbuf.cc b/ext/nnstreamer/extra/nnstreamer_grpc_flatbuf.cc
index 79329151..b85cc761 100644
--- a/ext/nnstreamer/extra/nnstreamer_grpc_flatbuf.cc
+++ b/ext/nnstreamer/extra/nnstreamer_grpc_flatbuf.cc
@@ -119,7 +119,11 @@ ServiceImplFlatbuf::_get_buffer_from_tensors (Message<Tensors> &msg,
     const Tensor * tensor = tensors->tensor ()->Get (i);
     const void * data = tensor->data ()->data ();
     gsize size = VectorLength (tensor->data ());
+#if GLIB_USE_G_MEMDUP2
+    gpointer new_data = g_memdup2 (data, size);
+#else
     gpointer new_data = g_memdup (data, size);
+#endif
 
     memory = gst_memory_new_wrapped ((GstMemoryFlags) 0, new_data, size,
         0, size, new_data, g_free);
diff --git a/ext/nnstreamer/extra/nnstreamer_grpc_protobuf.cc b/ext/nnstreamer/extra/nnstreamer_grpc_protobuf.cc
index 333e1a95..c95d4fa9 100644
--- a/ext/nnstreamer/extra/nnstreamer_grpc_protobuf.cc
+++ b/ext/nnstreamer/extra/nnstreamer_grpc_protobuf.cc
@@ -113,7 +113,11 @@ ServiceImplProtobuf::_get_buffer_from_tensors (Tensors &tensors,
     const Tensor * tensor = &tensors.tensor (i);
     const void * data = tensor->data ().c_str ();
     gsize size = tensor->data ().length ();
+#if GLIB_USE_G_MEMDUP2
+    gpointer new_data = g_memdup2 (data, size);
+#else
     gpointer new_data = g_memdup (data, size);
+#endif
 
     memory = gst_memory_new_wrapped ((GstMemoryFlags) 0, new_data, size,
         0, size, new_data, g_free);
diff --git a/ext/nnstreamer/extra/nnstreamer_protobuf.cc b/ext/nnstreamer/extra/nnstreamer_protobuf.cc
index 1e1f92ba..18b1f04c 100644
--- a/ext/nnstreamer/extra/nnstreamer_protobuf.cc
+++ b/ext/nnstreamer/extra/nnstreamer_protobuf.cc
@@ -125,7 +125,7 @@ gst_tensor_converter_protobuf (GstBuffer *in_buf, GstTensorsConfig *config, void
   GstMemory *in_mem, *out_mem;
   GstMapInfo in_info;
   GstBuffer *out_buf;
-  guint mem_size;
+  gsize mem_size;
   gpointer mem_data;
   UNUSED (priv_data);
 
@@ -160,7 +160,11 @@ gst_tensor_converter_protobuf (GstBuffer *in_buf, GstTensorsConfig *config, void
       config->info.info[i].dimension[j] = tensor->dimension (j);
     }
     mem_size = tensor->data ().length ();
+#if GLIB_USE_G_MEMDUP2
+    mem_data = g_memdup2 (tensor->data ().c_str (), mem_size);
+#else
     mem_data = g_memdup (tensor->data ().c_str (), mem_size);
+#endif
 
     out_mem = gst_memory_new_wrapped ((GstMemoryFlags) 0, mem_data, mem_size,
         0, mem_size, NULL, NULL);
diff --git a/ext/nnstreamer/tensor_converter/tensor_converter_python3.cc b/ext/nnstreamer/tensor_converter/tensor_converter_python3.cc
index 6a9e8eac..85c13b47 100644
--- a/ext/nnstreamer/tensor_converter/tensor_converter_python3.cc
+++ b/ext/nnstreamer/tensor_converter/tensor_converter_python3.cc
@@ -140,7 +140,8 @@ PYConverterCore::convert (GstBuffer *in_buf, GstTensorsConfig *config)
   GstBuffer *out_buf = NULL;
   PyObject *tensors_info = NULL, *output = NULL, *pyValue = NULL;
   gint rate_n, rate_d;
-  guint i, num, mem_size;
+  guint i, num;
+  gsize mem_size;
   gpointer mem_data;
 
   if (nullptr == in_buf)
@@ -196,7 +197,11 @@ PYConverterCore::convert (GstBuffer *in_buf, GstTensorsConfig *config)
           = (PyArrayObject *)PyList_GetItem (output, (Py_ssize_t)i);
 
       mem_size = PyArray_SIZE (output_array);
+#if GLIB_USE_G_MEMDUP2
+      mem_data = g_memdup2 ((guint8 *) PyArray_DATA (output_array), mem_size);
+#else
       mem_data = g_memdup ((guint8 *) PyArray_DATA (output_array), mem_size);
+#endif
 
       out_mem = gst_memory_new_wrapped ((GstMemoryFlags) 0, mem_data, mem_size,
           0, mem_size, mem_data, g_free);
diff --git a/meson.build b/meson.build
index 9f6c5aaa..3a3a5963 100644
--- a/meson.build
+++ b/meson.build
@@ -125,7 +125,12 @@ nnstreamer_conf.set('TRIX_ENGINE_ALIAS', get_option('trix-engine-alias'))
 add_project_arguments('-DNNSTREAMER_CONF_FILE="' + join_paths(nnstreamer_inidir, 'nnstreamer.ini') + '"', language: 'c')
 
 # Dependencies
-glib_dep = dependency('glib-2.0')
+glib_dep = dependency('glib-2.0', version: '>= 2.68.0', required: false)
+if (glib_dep.found())
+  add_project_arguments('-DGLIB_USE_G_MEMDUP2', language: ['c', 'cpp'])
+else
+  glib_dep = dependency('glib-2.0')
+endif
 gobject_dep = dependency('gobject-2.0')
 gmodule_dep = dependency('gmodule-2.0')
 gio_dep = dependency('gio-2.0')
diff --git a/tests/gstreamer_join/unittest_join.cc b/tests/gstreamer_join/unittest_join.cc
index 8a551b96..1b76e164 100644
--- a/tests/gstreamer_join/unittest_join.cc
+++ b/tests/gstreamer_join/unittest_join.cc
@@ -92,10 +92,18 @@ TEST (join, normal0)
 
   g_signal_connect (sink_handle, "new-data", (GCallback)new_data_cb, (gpointer)&idx);
 
+#if GLIB_USE_G_MEMDUP2
+  buf_0 = gst_buffer_new_wrapped (g_memdup2 (test_frames[0], 192), 192);
+#else
   buf_0 = gst_buffer_new_wrapped (g_memdup (test_frames[0], 192), 192);
+#endif
   buf_3 = gst_buffer_copy (buf_0);
 
+#if GLIB_USE_G_MEMDUP2
+  buf_1 = gst_buffer_new_wrapped (g_memdup2 (test_frames[1], 192), 192);
+#else
   buf_1 = gst_buffer_new_wrapped (g_memdup (test_frames[1], 192), 192);
+#endif
   buf_4 = gst_buffer_copy (buf_1);
 
   data_received = 0;
diff --git a/tests/nnstreamer_converter/unittest_converter.cc b/tests/nnstreamer_converter/unittest_converter.cc
index 63ab972a..30f4f319 100644
--- a/tests/nnstreamer_converter/unittest_converter.cc
+++ b/tests/nnstreamer_converter/unittest_converter.cc
@@ -66,7 +66,11 @@ tensor_converter_custom_cb (GstBuffer *in_buf,
     }
     flexbuffers::Blob tensor_data = tensor[3].AsBlob ();
     mem_size = tensor_data.size ();
+#if GLIB_USE_G_MEMDUP2
+    mem_data = g_memdup2 (tensor_data.data (), mem_size);
+#else
     mem_data = g_memdup (tensor_data.data (), mem_size);
+#endif
 
     out_mem = gst_memory_new_wrapped ((GstMemoryFlags) 0, mem_data, mem_size,
         0, mem_size, mem_data, g_free);
@@ -395,8 +399,13 @@ TEST (tensorConverterPython, dynamicDimension)
   data_received = (guint *) g_malloc0 (sizeof (guint));
   g_signal_connect (sink_handle, "new-data", (GCallback)new_data_cb, data_received);
 
+#if GLIB_USE_G_MEMDUP2
+  buf_0 = gst_buffer_new_wrapped (g_memdup2 (_test_frames1, 96), 96);
+  buf_1 = gst_buffer_new_wrapped (g_memdup2 (_test_frames2, 192), 192);
+#else
   buf_0 = gst_buffer_new_wrapped (g_memdup (_test_frames1, 96), 96);
   buf_1 = gst_buffer_new_wrapped (g_memdup (_test_frames2, 192), 192);
+#endif
   buf_2 = gst_buffer_copy (buf_0);
 
   EXPECT_EQ (setPipelineStateSync (pipeline, GST_STATE_PLAYING, TEST_TIMEOUT_MS), 0);
-- 
2.25.1

